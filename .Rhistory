)
)
}
get_tbl(tbl_df, "Local")
tbl_df
names(tbl_df)
names(tbl_df)[-c(1:2)]
names(tbl_df)[-c(1:2, ncol(tbl_df))]
col_names <- names(tbl_df)[-c(1:2, ncol(tbl_df))]
col_names
gsub("(^..).*", "\\1", x)
gsub("(^..).*", "\\1", col_names)
col_abv <- gsub("(^..).*", "\\1", col_names)
paste(col_abv, col_names, sep = ": ")
gsub("T. ", "", paste(col_abv, col_names, sep = ": "))
gsub("T. \\((.*)\\)", "\\1", paste(col_abv, col_names, sep = ": "))
tbl <- readRDS(here::here("Data/Count-1.Rds"))
tbl_df <- abind::abind(
count = tbl %>% addmargins(),
overall = proportions(tbl) %>%
addmargins() %>%
apply(1:2, scales::percent, 0.1),
bycstage = proportions(tbl, 1) %>%
addmargins() %>%
apply(1:2, scales::percent, 0.1),
bytstage = proportions(tbl, 2) %>%
addmargins() %>%
apply(1:2, scales::percent, 0.1),
along = 3,
new.names = c(
"frequency",
"% overall",
"% within clinical stage",
"% within T category"
)) %>%
aperm(c(3, 2, 1)) %>%
purrr::array_tree(3) %>%
purrr::map(as.data.table, keep.rownames = "Measure") %>%
rbindlist(idcol = "ClinicalStage") %>%
.[ClinicalStage != "Sum"] %>%
.[ClinicalStage == "Sum", Measure := "Sum"] %>%
.[grepl("within T category", Measure), Sum := NA_character_] %>%
.[, Measure := purrr::map2_chr(ClinicalStage, Measure, function(x, y) {
if (!grepl("clinical stage", y)) {
return(y)
}
gsub("clinical stage", gsub(" metastasis", "", x), y)
})]
get_tbl <- function(tbl_df, stage = NULL) {
col_names <- names(tbl_df)[-c(1:2, ncol(tbl_df))]
col_abv <- gsub("(^..).*", "\\1", col_names)
footnote <- gsub("T. \\((.*)\\)", "\\1", paste(col_abv, col_names, sep = ": "))
tbl_df <- setnames(copy(tbl_df), col_names, col_abv)
if (!is.null(stage)) {
tbl_df <- tbl_df[grepl(stage, ClinicalStage)]
}
gt::gt(tbl_df, rowname_col = "Measure", groupname_col = "ClinicalStage") %>%
gt::opt_table_font(font = "monospace") %>%
gt::sub_missing(missing_text = "") %>%
gt::tab_stub_indent(
rows = gt::matches("Overall|Within"),
indent = 3
) %>%
gt::tab_options(
table.width = "100%",
container.width = "100%",
data_row.padding = "1px",
row_group.padding = "5px",
row_group.font.weight = "bold",
column_labels.font.weight = "bold"
) %>%
gt::tab_footnote(
footnote = footnote,
locations = gt::cells_column_labels(gt::starts_with("[TU]"))
) %>%
gt::grand_summary_rows(
columns = everything(),
fns = list(
Sum ~ sum(as.numeric(.x[!grepl("%", .x)]), na.rm = TRUE)
)
)
}
get_tbl(tbl_df, "Local")
tbl <- readRDS(here::here("Data/Count-1.Rds"))
tbl_df <- abind::abind(
count = tbl %>% addmargins(),
overall = proportions(tbl) %>%
addmargins() %>%
apply(1:2, scales::percent, 0.1),
bycstage = proportions(tbl, 1) %>%
addmargins() %>%
apply(1:2, scales::percent, 0.1),
bytstage = proportions(tbl, 2) %>%
addmargins() %>%
apply(1:2, scales::percent, 0.1),
along = 3,
new.names = c(
"frequency",
"% overall",
"% within clinical stage",
"% within T category"
)) %>%
aperm(c(3, 2, 1)) %>%
purrr::array_tree(3) %>%
purrr::map(as.data.table, keep.rownames = "Measure") %>%
rbindlist(idcol = "ClinicalStage") %>%
.[ClinicalStage != "Sum"] %>%
.[ClinicalStage == "Sum", Measure := "Sum"] %>%
.[grepl("within T category", Measure), Sum := NA_character_] %>%
.[, Measure := purrr::map2_chr(ClinicalStage, Measure, function(x, y) {
if (!grepl("clinical stage", y)) {
return(y)
}
gsub("clinical stage", gsub(" metastasis", "", x), y)
})]
get_tbl <- function(tbl_df, stage = NULL) {
col_names <- names(tbl_df)[-c(1:2, ncol(tbl_df))]
col_abv <- gsub("(^..).*", "\\1", col_names)
footnote <- gsub("T. \\((.*)\\)", "\\1", paste(col_abv, col_names, sep = ": "))
tbl_df <- setnames(copy(tbl_df), col_names, col_abv)
if (!is.null(stage)) {
tbl_df <- tbl_df[grepl(stage, ClinicalStage)]
}
gt::gt(tbl_df, rowname_col = "Measure", groupname_col = "ClinicalStage") %>%
gt::opt_table_font(font = "monospace") %>%
gt::sub_missing(missing_text = "") %>%
gt::tab_stub_indent(
rows = gt::matches("Overall|Within"),
indent = 3
) %>%
gt::tab_options(
table.width = "100%",
container.width = "100%",
data_row.padding = "1px",
row_group.padding = "5px",
row_group.font.weight = "bold",
column_labels.font.weight = "bold"
) %>%
gt::tab_footnote(
footnote = footnote,
locations = gt::cells_column_labels(gt::matches("^[TU]"))
) %>%
gt::grand_summary_rows(
columns = everything(),
fns = list(
Sum ~ sum(as.numeric(.x[!grepl("%", .x)]), na.rm = TRUE)
)
)
}
get_tbl(tbl_df, "Local")
tbl <- readRDS(here::here("Data/Count-1.Rds"))
tbl_df <- abind::abind(
count = tbl %>% addmargins(),
overall = proportions(tbl) %>%
addmargins() %>%
apply(1:2, scales::percent, 0.1),
bycstage = proportions(tbl, 1) %>%
addmargins() %>%
apply(1:2, scales::percent, 0.1),
bytstage = proportions(tbl, 2) %>%
addmargins() %>%
apply(1:2, scales::percent, 0.1),
along = 3,
new.names = c(
"frequency",
"% overall",
"% within clinical stage",
"% within T category"
)) %>%
aperm(c(3, 2, 1)) %>%
purrr::array_tree(3) %>%
purrr::map(as.data.table, keep.rownames = "Measure") %>%
rbindlist(idcol = "ClinicalStage") %>%
.[ClinicalStage != "Sum"] %>%
.[ClinicalStage == "Sum", Measure := "Sum"] %>%
.[grepl("within T category", Measure), Sum := NA_character_] %>%
.[, Measure := purrr::map2_chr(ClinicalStage, Measure, function(x, y) {
if (!grepl("clinical stage", y)) {
return(y)
}
gsub("clinical stage", gsub(" metastasis", "", x), y)
})]
get_tbl <- function(tbl_df, stage = NULL) {
col_names <- names(tbl_df)[-c(1:2, ncol(tbl_df))]
col_abv <- gsub("(^..).*", "\\1", col_names)
footnote <- gsub("T. \\((.*)\\)", "\\1", paste(col_abv, col_names, sep = ": ")) %>%
paste(collapse = ", ")
tbl_df <- setnames(copy(tbl_df), col_names, col_abv)
if (!is.null(stage)) {
tbl_df <- tbl_df[grepl(stage, ClinicalStage)]
}
gt::gt(tbl_df, rowname_col = "Measure", groupname_col = "ClinicalStage") %>%
gt::opt_table_font(font = "monospace") %>%
gt::sub_missing(missing_text = "") %>%
gt::tab_stub_indent(
rows = gt::matches("Overall|Within"),
indent = 3
) %>%
gt::tab_options(
table.width = "100%",
container.width = "100%",
data_row.padding = "1px",
row_group.padding = "5px",
row_group.font.weight = "bold",
column_labels.font.weight = "bold"
) %>%
gt::tab_footnote(
footnote = footnote,
locations = gt::cells_column_labels(gt::matches("^[TU]"))
) %>%
gt::grand_summary_rows(
columns = everything(),
fns = list(
Sum ~ sum(as.numeric(.x[!grepl("%", .x)]), na.rm = TRUE)
)
)
}
get_tbl(tbl_df, "Local")
tbl <- readRDS(here::here("Data/Count-1.Rds"))
tbl_df <- abind::abind(
count = tbl %>% addmargins(),
overall = proportions(tbl) %>%
addmargins() %>%
apply(1:2, scales::percent, 0.1),
bycstage = proportions(tbl, 1) %>%
addmargins() %>%
apply(1:2, scales::percent, 0.1),
bytstage = proportions(tbl, 2) %>%
addmargins() %>%
apply(1:2, scales::percent, 0.1),
along = 3,
new.names = c(
"frequency",
"% overall",
"% within clinical stage",
"% within T category"
)) %>%
aperm(c(3, 2, 1)) %>%
purrr::array_tree(3) %>%
purrr::map(as.data.table, keep.rownames = "Measure") %>%
rbindlist(idcol = "ClinicalStage") %>%
.[ClinicalStage != "Sum"] %>%
.[ClinicalStage == "Sum", Measure := "Sum"] %>%
.[grepl("within T category", Measure), Sum := NA_character_] %>%
.[, Measure := purrr::map2_chr(ClinicalStage, Measure, function(x, y) {
if (!grepl("clinical stage", y)) {
return(y)
}
gsub("clinical stage", gsub(" metastasis", "", x), y)
})]
get_tbl <- function(tbl_df, stage = NULL) {
col_names <- names(tbl_df)[-c(1:2, ncol(tbl_df))]
col_abv <- gsub("(^..).*", "\\1", col_names)
footnote <- gsub("T. \\((.*)\\)", "\\1", paste(col_abv, col_names, sep = ": ")) %>%
paste(collapse = ", ")
tbl_df <- setnames(copy(tbl_df), col_names, col_abv)
if (!is.null(stage)) {
tbl_df <- tbl_df[grepl(stage, ClinicalStage)]
}
gt::gt(tbl_df, rowname_col = "Measure", groupname_col = "ClinicalStage") %>%
gt::opt_table_font(font = "monospace") %>%
gt::sub_missing(missing_text = "") %>%
gt::tab_stub_indent(
rows = gt::matches("Overall|Within"),
indent = 3
) %>%
gt::tab_options(
table.width = "100%",
container.width = "100%",
data_row.padding = "1px",
row_group.padding = "5px",
row_group.font.weight = "bold",
column_labels.font.weight = "bold"
) %>%
gt::tab_caption(
caption = footnote
) %>%
gt::grand_summary_rows(
columns = everything(),
fns = list(
Sum ~ sum(as.numeric(.x[!grepl("%", .x)]), na.rm = TRUE)
)
)
}
get_tbl(tbl_df, "Local")
tbl <- readRDS(here::here("Data/Count-1.Rds"))
tbl_df <- abind::abind(
count = tbl %>% addmargins(),
overall = proportions(tbl) %>%
addmargins() %>%
apply(1:2, scales::percent, 0.1),
bycstage = proportions(tbl, 1) %>%
addmargins() %>%
apply(1:2, scales::percent, 0.1),
bytstage = proportions(tbl, 2) %>%
addmargins() %>%
apply(1:2, scales::percent, 0.1),
along = 3,
new.names = c(
"frequency",
"% overall",
"% within clinical stage",
"% within T category"
)) %>%
aperm(c(3, 2, 1)) %>%
purrr::array_tree(3) %>%
purrr::map(as.data.table, keep.rownames = "Measure") %>%
rbindlist(idcol = "ClinicalStage") %>%
.[ClinicalStage != "Sum"] %>%
.[ClinicalStage == "Sum", Measure := "Sum"] %>%
.[grepl("within T category", Measure), Sum := NA_character_] %>%
.[, Measure := purrr::map2_chr(ClinicalStage, Measure, function(x, y) {
if (!grepl("clinical stage", y)) {
return(y)
}
gsub("clinical stage", gsub(" metastasis", "", x), y)
})]
get_tbl <- function(tbl_df, stage = NULL) {
col_names <- names(tbl_df)[-c(1:2, ncol(tbl_df))]
col_abv <- gsub("(^..).*", "\\1", col_names)
footnote <- gsub("T. \\((.*)\\)", "\\1", paste(col_abv, col_names, sep = ": ")) %>%
paste(collapse = ", ")
tbl_df <- setnames(copy(tbl_df), col_names, col_abv)
if (!is.null(stage)) {
tbl_df <- tbl_df[grepl(stage, ClinicalStage)]
}
gt::gt(tbl_df, rowname_col = "Measure", groupname_col = "ClinicalStage") %>%
gt::opt_table_font(font = "monospace") %>%
gt::sub_missing(missing_text = "") %>%
gt::tab_stub_indent(
rows = gt::matches("Overall|Within"),
indent = 3
) %>%
gt::tab_options(
table.width = "100%",
container.width = "100%",
data_row.padding = "1px",
row_group.padding = "5px",
row_group.font.weight = "bold",
column_labels.font.weight = "bold"
) %>%
gt::tab_source_note(
source_note = footnote
) %>%
gt::grand_summary_rows(
columns = everything(),
fns = list(
Sum ~ sum(as.numeric(.x[!grepl("%", .x)]), na.rm = TRUE)
)
)
}
get_tbl(tbl_df, "Local")
tbl <- readRDS(here::here("Data/Count-1.Rds"))
tbl_df <- abind::abind(
count = tbl %>% addmargins(),
overall = proportions(tbl) %>%
addmargins() %>%
apply(1:2, scales::percent, 0.1),
bycstage = proportions(tbl, 1) %>%
addmargins() %>%
apply(1:2, scales::percent, 0.1),
bytstage = proportions(tbl, 2) %>%
addmargins() %>%
apply(1:2, scales::percent, 0.1),
along = 3,
new.names = c(
"frequency",
"% overall",
"% within clinical stage",
"% within T category"
)) %>%
aperm(c(3, 2, 1)) %>%
purrr::array_tree(3) %>%
purrr::map(as.data.table, keep.rownames = "Measure") %>%
rbindlist(idcol = "ClinicalStage") %>%
.[ClinicalStage != "Sum"] %>%
.[ClinicalStage == "Sum", Measure := "Sum"] %>%
.[grepl("within T category", Measure), Sum := NA_character_] %>%
.[, Measure := purrr::map2_chr(ClinicalStage, Measure, function(x, y) {
if (!grepl("clinical stage", y)) {
return(y)
}
gsub("clinical stage", gsub(" metastasis", "", x), y)
})]
get_tbl <- function(tbl_df, stage = NULL) {
col_names <- names(tbl_df)[-c(1:2, ncol(tbl_df))]
col_abv <- gsub("(^..).*", "\\1", col_names)
footnote <- gsub("T. \\((.*)\\)", "\\1", paste(col_abv, col_names, sep = ": ")) %>%
paste(collapse = ", ")
tbl_df <- setnames(copy(tbl_df), col_names, col_abv)
if (!is.null(stage)) {
tbl_df <- tbl_df[grepl(stage, ClinicalStage)]
}
gt::gt(tbl_df, rowname_col = "Measure", groupname_col = "ClinicalStage") %>%
gt::opt_table_font(font = "monospace") %>%
gt::sub_missing(missing_text = "") %>%
gt::tab_stub_indent(
rows = gt::matches("Overall|Within"),
indent = 3
) %>%
gt::tab_options(
table.width = "100%",
container.width = "100%",
data_row.padding = "1px",
row_group.padding = "5px",
row_group.font.weight = "bold",
column_labels.font.weight = "bold"
) %>%
gt::tab_source_note(
source_note = footnote
)
}
get_tbl(tbl_df, "Local")
tbl <- readRDS(here::here("Data/Count-1.Rds"))
tbl_df <- abind::abind(
count = tbl %>% addmargins(),
overall = proportions(tbl) %>%
addmargins() %>%
apply(1:2, scales::percent, 0.1),
bycstage = proportions(tbl, 1) %>%
addmargins() %>%
apply(1:2, scales::percent, 0.1),
bytstage = proportions(tbl, 2) %>%
addmargins() %>%
apply(1:2, scales::percent, 0.1),
along = 3,
new.names = c(
"frequency",
"% overall",
"% within clinical stage",
"% within T category"
)) %>%
aperm(c(3, 2, 1)) %>%
purrr::array_tree(3) %>%
purrr::map(as.data.table, keep.rownames = "Measure") %>%
rbindlist(idcol = "ClinicalStage") %>%
.[ClinicalStage != "Sum"] %>%
.[ClinicalStage == "Sum", Measure := "Sum"] %>%
.[grepl("within T category", Measure), Sum := NA_character_] %>%
.[, Measure := purrr::map2_chr(ClinicalStage, Measure, function(x, y) {
if (!grepl("clinical stage", y)) {
return(y)
}
gsub("clinical stage", gsub(" metastasis", "", x), y)
})]
get_tbl <- function(tbl_df, stage = NULL) {
col_names <- names(tbl_df)[-c(1:2, ncol(tbl_df))]
col_abv <- gsub("(^..).*", "\\1", col_names)
footnote <- gsub("T. \\((.*)\\)", "\\1", paste(col_abv, col_names, sep = ": ")) %>%
paste(collapse = ", ")
tbl_df <- setnames(copy(tbl_df), col_names, col_abv)
if (!is.null(stage)) {
tbl_df <- tbl_df[grepl(stage, ClinicalStage)]
}
gt::gt(tbl_df, rowname_col = "Measure", groupname_col = "ClinicalStage") %>%
gt::opt_table_font(font = "monospace") %>%
gt::sub_missing(missing_text = "") %>%
gt::tab_stub_indent(
rows = gt::matches("Overall|Within"),
indent = 3
) %>%
gt::tab_options(
table.width = "100%",
container.width = "100%",
data_row.padding = "1px",
row_group.padding = "5px",
row_group.font.weight = "bold",
column_labels.font.weight = "bold",
table.font.size = "100%"
) %>%
gt::tab_source_note(
source_note = footnote
)
}
get_tbl(tbl_df, "Local")
get_tbl(tbl_df, "Distant|Unsp") %>% gt::tab_style(
style = list(
gt::cell_fill(color = "firebrick", alpha = 0.15),
gt::cell_text(weight = "bold", color = "firebrick")
),
locations = list(
gt::cells_body(
columns = gt::matches("Un"),
rows = grepl("Distant", ClinicalStage) &
grepl("Distant", Measure)
),
gt::cells_body(
columns = gt::matches("Unsp|Sum"),
rows = grepl("Unsp", ClinicalStage) &
grepl("overall", Measure)
)
)
)
get_tbl(tbl_df, "Distant|Unsp") %>% gt::tab_style(
style = list(
gt::cell_fill(color = "firebrick", alpha = 0.15),
gt::cell_text(weight = "bold", color = "firebrick")
),
locations = list(
gt::cells_body(
columns = gt::matches("Un"),
rows = grepl("Distant", ClinicalStage) &
grepl("Distant", Measure)
),
gt::cells_body(
columns = gt::matches("Un|Sum"),
rows = grepl("Unsp", ClinicalStage) &
grepl("overall", Measure)
)
)
)
q("no")
